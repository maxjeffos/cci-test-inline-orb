version: 2.1
description: This is an inline job

orbs:
  inline_example:
    jobs:
      my_inline_job:
        parameters:
          greeting_name:
            description: # a helpful description
            type: string
            default: olleh
        executor: my_inline_executor
        steps:
          - my_inline_command:
              greeting_name: <<parameters.greeting_name>>
    commands:
      my_inline_command:
        parameters:
          greeting_name:
            type: string
        steps:
          - run: echo "hello <<parameters.greeting_name>>, from the inline command"

      inline_command_with_using_env_var:
        # environment: # can't use `enviroment` at the `command` level
        #   MY_ENV_VAR: "Some Value"
        parameters:
          greeting_name:
            type: string
        steps:
          - run: echo "hello <<parameters.greeting_name>>, from the inline command"
          - run:
              name: Try Using Env Var defined in Orb
              environment:
                MY_RUN_LEVEL_ENV_VAR: "Some run-level env var value"
              command: |
                echo "MY_RUN_LEVEL_ENV_VAR: $MY_RUN_LEVEL_ENV_VAR"

    executors:
      my_inline_executor:
        parameters:
          version:
            type: string
            default: "2.4"
        docker:
          - image: circleci/ruby:<<parameters.version>>

jobs:
  job_uses_my_command:
    docker:
      - image: circleci/node:lts
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Hello
          command: |
            echo "Hello"
      - inline_example/inline_command_with_using_env_var:
          greeting_name: foobar

workflows:
  build-test-deploy:
    jobs:
      - inline_example/my_inline_job:
          name: mybuild # best practice is to name each orb job
      - inline_example/my_inline_job:
          name: mybuild2
          greeting_name: world
      - job_uses_my_command
